#two pointer approach t.c is O(n) and as there is not used any kind of growing memory thats why s.c is O(1)

class Solution:
    def maxProfit(self, prices: List[int]) -> int:
       l=0
       r=1
       csum=0
       pro=0
       while(r<len(prices)):
        if(prices[l]<prices[r]):
            csum=prices[r]-prices[l]
        else:
            l=r
        r+=1
        pro=max(pro,csum)
        
       return pro 
            
