# time complexity O(n) & space complexity is O(1)

# Definition for singly-linked list.

# class ListNode:

#     def __init__(self, val=0, next=None):

#         self.val = val

#         self.next = next

class Solution:

    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:

        p=0

        q=head

        if q is None:

            return None

        while q is not None:

            p+=1

            q=q.next
            
         

        if (p==1):

            head=None

            return head

        if (p==n):

            head=head.next
 
            return head

       

        

        r=head

        i=1

        while i<p-n:

            r=r.next

            i+=1
        

        if(r.next is not None):

            r.next=r.next.next

        return head
