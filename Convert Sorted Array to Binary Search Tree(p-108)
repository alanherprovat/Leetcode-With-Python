time complexity is O(n) & space complexity is O(logn)

class Solution:
    def sortedArrayToBST(self, nums: List[int]) -> TreeNode:
       
        
        def recur(l,r):
            if(l>r):
                return None
            m=(l+r)//2
            root=TreeNode(nums[m])
            root.left=recur(l,m-1)
            root.right=recur(m+1,r)
            
            return root
        return recur(0,len(nums)-1)   
        
