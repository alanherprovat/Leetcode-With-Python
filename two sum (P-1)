
#time complexity is O(n) as it traverse the list(numbs) and the space complexity is O(n) as the map/dictionary grows length of the list which is basically n .
#problem-1 link 
https://leetcode.com/problems/two-sum/description/

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        
        prev=dict()
        for i in range (len(nums)):
            com=target-nums[i]
            if nums[i] in prev:
                    return{prev[nums[i]],i}
            else:
                prev[com]=i
