#solution 1 with t.c O(m+n) and s.c O(1)
class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        
        l=m+n-1
    #merging nums2 into nums1 in reverse order 
        while m>0  and n>0:
             if nums1[m-1]>nums2[n-1]:
                 nums1[l]=nums1[m-1]
                 m-=1
             else:
                 nums1[l]=nums2[n-1]
                 n-=1
             l-=1
            
#filling the leftover elements of nums2 into nums1
        while n>0:
          nums1[l]=nums2[n-1]
          l-=1
          n-=1
        
            
 #solution-2 with tc O(nlogn) and sc O(1)
 
 class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        i=0
        while m<len(nums1):
            nums1[m]=nums2[i]
            m+=1
            i+=1
        
        nums1.sort()
        print(nums1)
            
            
